name: Build Kolla Images v2

on:
  workflow_dispatch:  # 手动触发

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  # 第一个任务：构建基础镜像
  build-base:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        openstack_release: [
          "2024.2",
          "2025.1"
        ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Clean Docker cache
        run: |
          docker system prune -af
          docker builder prune -af

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip python3-dev build-essential libffi-dev

      - name: Install Kolla and Docker
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install kolla
          python3 -m pip install docker

      - name: Create kolla-build.conf
        run: |
          sudo mkdir -p /etc/kolla
          
          cat << EOF | sudo tee /etc/kolla/kolla-build.conf
          [DEFAULT]
          namespace = ${{ env.OWNER }}
          push = true
          tag = ${{ matrix.openstack_release }}
          base = ubuntu
          registry = ${{ env.REGISTRY }}
          build_args = {"org.opencontainers.image.source":"https://github.com/${{ github.repository }}"}
          skip_existing = true
          pull = true
          
          # 配置源代码仓库位置
          [openstack-base]
          type = git
          location = https://opendev.org/openstack/requirements
          reference = stable/${{ matrix.openstack_release }}
          EOF
          
          cat /etc/kolla/kolla-build.conf

      - name: Build and push base images
        run: |
          for i in {1..3}; do
            echo "Attempt $i: Building base images for OpenStack ${{ matrix.openstack_release }}"
            if sudo -E python3 -m kolla.cmd.build --skip-existing --pull base openstack-base; then
              break
            fi
            echo "Build attempt $i failed, cleaning cache and retrying..."
            docker system prune -af
            docker builder prune -af
            sleep 10
          done
          
          # 验证基础镜像是否成功构建和推送
          docker pull ${{ env.REGISTRY }}/${{ env.OWNER }}/base:${{ matrix.openstack_release }}
          docker pull ${{ env.REGISTRY }}/${{ env.OWNER }}/openstack-base:${{ matrix.openstack_release }}

  # 第二个任务：构建服务镜像
  build-services:
    needs: build-base
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        service: [
          # 核心服务
          "keystone", "glance", "nova", "neutron", "cinder", "placement",
          
          # 包含 ceilometer 在内的其他服务
          "aodh", "barbican", "bifrost", "blazar", "ceilometer", 
          "cloudkitty", "collectd", "cron", "cyborg", "designate", 
          "dnsmasq", "etcd", "fluentd", "gnocchi", "grafana", 
          "hacluster", "haproxy", "heat", "horizon", "influxdb", 
          "ironic-inspector", "ironic", "iscsid", "keepalived", 
          "kolla-toolbox", "kuryr", "letsencrypt", "magnum", "manila", 
          "mariadb", "masakari", "memcached", "mistral", "multipathd", 
          "networking-baremetal", "octavia", "opensearch", 
          "openvswitch", "ovn", "ovsdpdk", "prometheus", "proxysql", 
          "rabbitmq", "redis", "skyline", "tacker", "telegraf", 
          "tgtd", "trove", "venus", "watcher", "zun"
        ]
        openstack_release: [
          "2024.2",
          "2025.1"
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Clean Docker cache
        run: |
          docker system prune -af
          docker builder prune -af

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip python3-dev build-essential libffi-dev

      - name: Install Kolla and Docker
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install kolla
          python3 -m pip install docker

      - name: Create kolla-build.conf
        run: |
          sudo mkdir -p /etc/kolla
          
          cat << EOF | sudo tee /etc/kolla/kolla-build.conf
          [DEFAULT]
          namespace = ${{ env.OWNER }}
          push = true
          tag = ${{ matrix.openstack_release }}
          base = ubuntu
          registry = ${{ env.REGISTRY }}
          build_args = {"org.opencontainers.image.source":"https://github.com/${{ github.repository }}"}
          skip_existing = true
          pull = true
          
          # 配置源代码仓库位置
          [openstack-base]
          type = git
          location = https://opendev.org/openstack/requirements
          reference = stable/${{ matrix.openstack_release }}
          
          [aodh-base]
          type = git
          location = https://opendev.org/openstack/aodh
          reference = stable/${{ matrix.openstack_release }}
          
          [barbican-base]
          type = git
          location = https://opendev.org/openstack/barbican
          reference = stable/${{ matrix.openstack_release }}
          
          [bifrost-base]
          type = git
          location = https://opendev.org/openstack/bifrost
          reference = stable/${{ matrix.openstack_release }}
          
          [blazar-base]
          type = git
          location = https://opendev.org/openstack/blazar
          reference = stable/${{ matrix.openstack_release }}
          
          [ceilometer-base]
          type = git
          location = https://opendev.org/openstack/ceilometer
          reference = stable/${{ matrix.openstack_release }}
          
          [cinder-base]
          type = git
          location = https://opendev.org/openstack/cinder
          reference = stable/${{ matrix.openstack_release }}
          
          [cloudkitty-base]
          type = git
          location = https://opendev.org/openstack/cloudkitty
          reference = stable/${{ matrix.openstack_release }}
          
          [cyborg-base]
          type = git
          location = https://opendev.org/openstack/cyborg
          reference = stable/${{ matrix.openstack_release }}
          
          [designate-base]
          type = git
          location = https://opendev.org/openstack/designate
          reference = stable/${{ matrix.openstack_release }}
          
          [glance-base]
          type = git
          location = https://opendev.org/openstack/glance
          reference = stable/${{ matrix.openstack_release }}
          
          [gnocchi-base]
          type = git
          location = https://opendev.org/openstack/gnocchi
          reference = stable/${{ matrix.openstack_release }}
          
          [heat-base]
          type = git
          location = https://opendev.org/openstack/heat
          reference = stable/${{ matrix.openstack_release }}
          
          [horizon]
          type = git
          location = https://opendev.org/openstack/horizon
          reference = stable/${{ matrix.openstack_release }}
          
          [ironic-base]
          type = git
          location = https://opendev.org/openstack/ironic
          reference = stable/${{ matrix.openstack_release }}
          
          [ironic-inspector-base]
          type = git
          location = https://opendev.org/openstack/ironic-inspector
          reference = stable/${{ matrix.openstack_release }}
          
          [keystone-base]
          type = git
          location = https://opendev.org/openstack/keystone
          reference = stable/${{ matrix.openstack_release }}
          
          [kuryr-base]
          type = git
          location = https://opendev.org/openstack/kuryr
          reference = stable/${{ matrix.openstack_release }}
          
          [magnum-base]
          type = git
          location = https://opendev.org/openstack/magnum
          reference = stable/${{ matrix.openstack_release }}
          
          [manila-base]
          type = git
          location = https://opendev.org/openstack/manila
          reference = stable/${{ matrix.openstack_release }}
          
          [masakari-base]
          type = git
          location = https://opendev.org/openstack/masakari
          reference = stable/${{ matrix.openstack_release }}
          
          [mistral-base]
          type = git
          location = https://opendev.org/openstack/mistral
          reference = stable/${{ matrix.openstack_release }}
          
          [neutron-base]
          type = git
          location = https://opendev.org/openstack/neutron
          reference = stable/${{ matrix.openstack_release }}
          
          [networking-baremetal-base]
          type = git
          location = https://opendev.org/openstack/networking-baremetal
          reference = stable/${{ matrix.openstack_release }}
          
          [nova-base]
          type = git
          location = https://opendev.org/openstack/nova
          reference = stable/${{ matrix.openstack_release }}
          
          [octavia-base]
          type = git
          location = https://opendev.org/openstack/octavia
          reference = stable/${{ matrix.openstack_release }}
          
          [placement-base]
          type = git
          location = https://opendev.org/openstack/placement
          reference = stable/${{ matrix.openstack_release }}
          
          [skyline-base]
          type = git
          location = https://opendev.org/openstack/skyline-apiserver
          reference = stable/${{ matrix.openstack_release }}
          
          [skyline-console]
          type = git
          location = https://opendev.org/openstack/skyline-console
          reference = stable/${{ matrix.openstack_release }}
          
          [tacker-base]
          type = git
          location = https://opendev.org/openstack/tacker
          reference = stable/${{ matrix.openstack_release }}
          
          [trove-base]
          type = git
          location = https://opendev.org/openstack/trove
          reference = stable/${{ matrix.openstack_release }}
          
          [venus-base]
          type = git
          location = https://opendev.org/openstack/venus
          reference = stable/${{ matrix.openstack_release }}
          
          [watcher-base]
          type = git
          location = https://opendev.org/openstack/watcher
          reference = stable/${{ matrix.openstack_release }}
          
          [zun-base]
          type = git
          location = https://opendev.org/openstack/zun
          reference = stable/${{ matrix.openstack_release }}
          EOF
          
          cat /etc/kolla/kolla-build.conf

      - name: Verify base images exist
        run: |
          echo "Verifying base images exist for OpenStack ${{ matrix.openstack_release }}..."
          docker pull ${{ env.REGISTRY }}/${{ env.OWNER }}/base:${{ matrix.openstack_release }}
          docker pull ${{ env.REGISTRY }}/${{ env.OWNER }}/openstack-base:${{ matrix.openstack_release }}
          echo "Base images verified."

      - name: Build and push service image
        run: |
          echo "Building ${{ matrix.service }} for OpenStack ${{ matrix.openstack_release }}"
          for i in {1..3}; do
            echo "Attempt $i: Building ${{ matrix.service }}"
            if sudo -E python3 -m kolla.cmd.build --skip-existing --pull ${{ matrix.service }}; then
              echo "${{ matrix.service }} built successfully"
              break
            fi
            
            if [ $i -lt 3 ]; then
              echo "Build failed, cleaning cache and retrying..."
              docker system prune -af --volumes
              docker builder prune -af
              sleep 20
            else
              echo "All attempts to build ${{ matrix.service }} failed"
              exit 1
            fi
          done