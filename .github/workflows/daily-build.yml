name: Build Kolla Images

on:
  workflow_dispatch:  # 允许手动触发

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false  # 即使某个任务失败，也继续执行其他任务
      matrix:
        service: [
          "keystone"
        ]
        base_distro: [
          "ubuntu"
        ]
        openstack_release: [
          "2024.2" # Caracal
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip python3-dev build-essential libffi-dev

      - name: Debug environment
        run: |
          python3 --version
          pip --version
          docker --version
          ls -la

      - name: Prepare Kolla Build Environment
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install .
          which kolla-build || echo "kolla-build not found"

      - name: Build and push image with debug
        run: |
          # 设置镜像标签
          IMAGE_NAME="${{ env.REGISTRY }}/${{ env.OWNER }}/kolla-${{ matrix.base_distro }}-${{ matrix.service }}:${{ matrix.openstack_release }}"
          
          echo "Building image: ${IMAGE_NAME}"
          echo "Current directory: $(pwd)"
          echo "Kolla version: $(kolla-build --version)"
          
          # 构建镜像并推送到GHCR
          sudo kolla-build \
            --base ${{ matrix.base_distro }} \
            --type source \
            --tag ${{ matrix.openstack_release }} \
            --push \
            --registry ${{ env.REGISTRY }}/${{ env.OWNER }} \
            --registry-namespace "" \
            --verbose \
            --debug \
            ${{ matrix.service }}