name: Build Horizon Dashboard

on:
  push:
    branches: [main, master]
    paths:
      - 'docker/horizon/**'
  pull_request:
    branches: [main, master]
    paths:
      - 'docker/horizon/**'
  workflow_dispatch:
    inputs:
      base_distro:
        description: 'Base distribution'
        required: false
        default: 'ubuntu'
        type: choice
        options:
          - ubuntu
          - rocky
          - debian
      push_images:
        description: 'Push images to registry'
        required: false
        default: true
        type: boolean

env:
  REGISTRY: ghcr.io
  OWNER: fivetime

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Kolla
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install kolla docker

      - name: Create Horizon plugins template
        run: |
          cat > horizon-plugins.j2 << 'EOF'
          {% extends parent_template %}
          
          {% block horizon_footer %}
          ENV ENABLE_BLAZAR=yes \
              ENABLE_CLOUDKITTY=yes \
              ENABLE_DESIGNATE=yes \
              ENABLE_FWAAS=yes \
              ENABLE_HEAT=yes \
              ENABLE_IRONIC=yes \
              ENABLE_MAGNUM=yes \
              ENABLE_MANILA=yes \
              ENABLE_MASAKARI=yes \
              ENABLE_MISTRAL=yes \
              ENABLE_NEUTRON_VPNAAS=yes \
              ENABLE_OCTAVIA=yes \
              ENABLE_TACKER=yes \
              ENABLE_TROVE=yes \
              ENABLE_VENUS=yes \
              ENABLE_WATCHER=yes \
              ENABLE_ZUN=yes
          {% endblock %}
          EOF

      - name: Build Horizon with all plugins
        run: |
          echo "Building Horizon with all plugins enabled"
          
          kolla-build \
            --base ${{ inputs.base_distro || 'ubuntu' }} \
            --namespace ${{ env.REGISTRY }}/${{ env.OWNER }} \
            --template-override horizon-plugins.j2 \
            --retries 3 \
            horizon

      - name: Test Horizon image
        if: success()
        run: |
          echo "Testing Horizon image..."
          HORIZON_IMAGE=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep horizon | head -1)
          if [ -n "$HORIZON_IMAGE" ]; then
            echo "Found: $HORIZON_IMAGE"
            docker run --rm "$HORIZON_IMAGE" python3 -c "import openstack_dashboard; print('Horizon OK')"
          fi

      - name: Login to Container Registry
        if: success() && (github.event_name == 'push' || inputs.push_images == true)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Horizon image
        if: success() && (github.event_name == 'push' || inputs.push_images == true)
        run: |
          echo "Pushing Horizon image..."
          for image in $(docker images --format "{{.Repository}}:{{.Tag}}" | grep "${{ env.REGISTRY }}/${{ env.OWNER }}" | grep horizon); do
            if [[ "$image" != *"<none>"* ]]; then
              echo "Pushing: $image"
              docker push "$image"
            fi
          done