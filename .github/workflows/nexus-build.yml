name: Build Nexus Images

on:
  workflow_dispatch:  # ÊâãÂä®Ëß¶Âèë
    inputs:
      push_images:
        description: 'Push images to registry'
        required: false
        default: true
        type: boolean
      kubectl_version:
        description: 'kubectl version'
        required: false
        default: 'v1.33.0'
        type: string
  push:
    branches: [ main, master ]
    paths:
      - 'kolla/docker/nexus-**'
      - '.github/workflows/nexus-build.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'kolla/docker/nexus-**'
      - '.github/workflows/nexus-build.yml'

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        service: [
          "nexus"
        ]
        base_distro: [
          "ubuntu"
        ]
        base_tag: [
          "jammy"
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip python3-dev build-essential libffi-dev

      - name: Install Kolla and Docker
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install kolla
          python3 -m pip install docker

      - name: Create kolla-build.conf for Nexus
        run: |
          sudo mkdir -p /etc/kolla
          
          cat << EOF | sudo tee /etc/kolla/kolla-build.conf
          [DEFAULT]
          namespace = ${{ env.OWNER }}
          push = ${{ github.event_name != 'pull_request' && (inputs.push_images || 'true') }}
          tag = latest
          base = ${{ matrix.base_distro }}
          base_tag = ${{ matrix.base_tag }}
          registry = ${{ env.REGISTRY }}
          build_args = {"org.opencontainers.image.source":"https://github.com/${{ github.repository }}"}
          skip_existing = false
          pull = true
          squash = false
          
          # Nexus È°πÁõÆÈÖçÁΩÆ
          [nexus-user]
          uid = 42424
          gid = 42424
          EOF
          
          echo "=== Kolla Build Configuration ==="
          cat /etc/kolla/kolla-build.conf

      - name: List available Nexus images
        run: |
          echo "=== Available Nexus Templates ==="
          kolla-build --list-images | grep -E "nexus" || echo "Checking nexus template structure..."
          
          echo "=== Template Directory Structure ==="
          find docker/nexus -type d | head -10
          
          echo "=== Template Files ==="
          find docker/nexus -name "Dockerfile.j2" | head -10

      - name: Build Nexus images
        run: |
          echo "=== Building Nexus images ==="
          echo "Service: ${{ matrix.service }}"
          echo "Base: ${{ matrix.base_distro }}:${{ matrix.base_tag }}"
          echo "Registry: ${{ env.REGISTRY }}/${{ env.OWNER }}"
          
          # ÊûÑÂª∫ nexus Áõ∏ÂÖ≥ÁöÑÊâÄÊúâÈïúÂÉèÔºàÂåÖÊã¨ proxy Âíå dns Â≠êÈïúÂÉèÔºâ
          sudo -E kolla-build \
            --config-file /etc/kolla/kolla-build.conf \
            --debug \
            ${{ matrix.service }}

      - name: Test built images
        if: success()
        run: |
          echo "=== Testing Nexus images ==="
          
          # Ê£ÄÊü•ÊûÑÂª∫ÁöÑÈïúÂÉè
          docker images | grep nexus || echo "Images not found in local registry"
          
          # ÊµãËØï nexus-proxy ÈïúÂÉè
          PROXY_IMAGE="${{ env.REGISTRY }}/${{ env.OWNER }}/nexus-proxy:latest"
          if docker images | grep -q nexus-proxy; then
            echo "Testing nexus-proxy tools..."
            docker run --rm $PROXY_IMAGE kubectl version --client || echo "kubectl test failed"
            docker run --rm $PROXY_IMAGE jq --version || echo "jq test failed"
            docker run --rm $PROXY_IMAGE nginx -v || echo "nginx test failed"
            docker run --rm $PROXY_IMAGE openstack --version || echo "openstack test failed"
          fi
          
          # ÊµãËØï nexus-dns ÈïúÂÉè
          DNS_IMAGE="${{ env.REGISTRY }}/${{ env.OWNER }}/nexus-dns:latest"  
          if docker images | grep -q nexus-dns; then
            echo "Testing nexus-dns tools..."
            docker run --rm $DNS_IMAGE kubectl version --client || echo "kubectl test failed"
            docker run --rm $DNS_IMAGE jq --version || echo "jq test failed"
            docker run --rm $DNS_IMAGE dnsmasq --version || echo "dnsmasq test failed"
            docker run --rm $DNS_IMAGE dig -v || echo "dig test failed"
          fi

      - name: Generate images metadata
        if: success()
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.OWNER }}/nexus-proxy
            ${{ env.REGISTRY }}/${{ env.OWNER }}/nexus-dns
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{date 'YYYYMMDD'}}-{{sha}}

      - name: Show build results
        if: always()
        run: |
          echo "=== Build Summary ==="
          echo "Service: ${{ matrix.service }}"
          echo "Status: ${{ job.status }}"
          echo "Base Image: ${{ matrix.base_distro }}:${{ matrix.base_tag }}"
          echo "Target Registry: ${{ env.REGISTRY }}/${{ env.OWNER }}"
          echo "Push Enabled: ${{ github.event_name != 'pull_request' && (inputs.push_images || 'true') }}"
          
          echo "=== Local Images ==="
          docker images | grep nexus || echo "No nexus images found locally"
          
          if [[ "${{ github.event_name }}" != "pull_request" ]]; then
            echo "=== Registry Images (if pushed) ==="
            echo "Image should be available at:"
            echo "  ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ matrix.service }}:latest"
            echo "  ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ matrix.service }}:$(date +%Y%m%d)-$(echo ${{ github.sha }} | cut -c1-7)"
          fi

  # ÊûÑÂª∫ÂÆåÊàêÂêéÁöÑÊï¥ÂêàÊµãËØï
  integration-test:
    needs: build
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull and test images
        if: github.event_name != 'pull_request'
        run: |
          echo "=== Integration Testing ==="
          
          # ÊãâÂèñÈïúÂÉè
          docker pull ${{ env.REGISTRY }}/${{ env.OWNER }}/nexus-proxy:latest || echo "nexus-proxy pull failed"
          docker pull ${{ env.REGISTRY }}/${{ env.OWNER }}/nexus-dns:latest || echo "nexus-dns pull failed"
          
          # ÊòæÁ§∫ÈïúÂÉè‰ø°ÊÅØ
          echo "=== Image Information ==="
          docker images | grep nexus
          
          # Âü∫Á°ÄËøûÈÄöÊÄßÊµãËØï
          echo "=== Basic Connectivity Test ==="
          docker run --rm ${{ env.REGISTRY }}/${{ env.OWNER }}/nexus-proxy:latest echo "nexus-proxy is ready" || echo "nexus-proxy connection failed"
          docker run --rm ${{ env.REGISTRY }}/${{ env.OWNER }}/nexus-dns:latest echo "nexus-dns is ready" || echo "nexus-dns connection failed"
          
          echo "=== Integration Test Completed ==="

  # Ê∏ÖÁêÜÂíåÈÄöÁü•
  cleanup:
    needs: [build, integration-test]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Cleanup and Summary
        run: |
          echo "=== Build Summary ==="
          echo "Build Status: ${{ needs.build.result }}"
          echo "Integration Test Status: ${{ needs.integration-test.result }}"
          echo "Trigger: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Registry: ${{ env.REGISTRY }}/${{ env.OWNER }}"
          
          if [[ "${{ needs.build.result }}" == "success" ]]; then
            echo "‚úÖ Nexus images built successfully!"
            echo "üì¶ Available images:"
            echo "   - nexus-proxy:latest"
            echo "   - nexus-dns:latest"
          else
            echo "‚ùå Build failed. Check the logs above."
          fi